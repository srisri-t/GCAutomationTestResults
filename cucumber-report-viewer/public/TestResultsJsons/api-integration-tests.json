[
  {
    "line": 1,
    "elements": [
      {
        "line": 3,
        "name": "GET request returns user data",
        "description": "",
        "id": "user-api;get-request-returns-user-data",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 850000000,
              "status": "passed"
            },
            "line": 4,
            "name": "the API is available",
            "match": {
              "location": "ApiSteps.apiIsAvailable()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1200000000,
              "status": "passed"
            },
            "line": 5,
            "name": "I send a GET request to /api/users/123",
            "match": {
              "location": "ApiSteps.sendGetRequest(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 450000000,
              "status": "passed"
            },
            "line": 6,
            "name": "the response status should be 200",
            "match": {
              "location": "ApiSteps.verifyResponseStatus(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 320000000,
              "status": "passed"
            },
            "line": 7,
            "name": "the response should contain user details",
            "match": {
              "location": "ApiSteps.verifyUserDetails()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 2,
            "name": "@api"
          },
          {
            "line": 2,
            "name": "@smoke"
          }
        ]
      },
      {
        "line": 9,
        "name": "POST request creates new user",
        "description": "",
        "id": "user-api;post-request-creates-new-user",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 650000000,
              "status": "passed"
            },
            "line": 10,
            "name": "the API is available",
            "match": {
              "location": "ApiSteps.apiIsAvailable()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1800000000,
              "status": "passed"
            },
            "line": 11,
            "name": "I send a POST request to /api/users with valid data",
            "match": {
              "location": "ApiSteps.sendPostRequestWithData(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 380000000,
              "status": "passed"
            },
            "line": 12,
            "name": "the response status should be 201",
            "match": {
              "location": "ApiSteps.verifyResponseStatus(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 520000000,
              "status": "passed"
            },
            "line": 13,
            "name": "the response should contain the created user ID",
            "match": {
              "location": "ApiSteps.verifyCreatedUserId()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 8,
            "name": "@api"
          },
          {
            "line": 8,
            "name": "@crud"
          }
        ]
      },
      {
        "line": 15,
        "name": "API handles invalid requests gracefully",
        "description": "",
        "id": "user-api;api-handles-invalid-requests-gracefully",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 720000000,
              "status": "passed"
            },
            "line": 16,
            "name": "the API is available",
            "match": {
              "location": "ApiSteps.apiIsAvailable()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 950000000,
              "status": "passed"
            },
            "line": 17,
            "name": "I send a GET request to /api/users/invalid-id",
            "match": {
              "location": "ApiSteps.sendGetRequest(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 280000000,
              "status": "passed"
            },
            "line": 18,
            "name": "the response status should be 404",
            "match": {
              "location": "ApiSteps.verifyResponseStatus(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 410000000,
              "status": "passed"
            },
            "line": 19,
            "name": "the response should contain an error message",
            "match": {
              "location": "ApiSteps.verifyErrorMessage()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 14,
            "name": "@api"
          },
          {
            "line": 14,
            "name": "@error-handling"
          }
        ]
      }
    ],
    "name": "User API Endpoints",
    "description": "Testing REST API endpoints for user management",
    "id": "user-api",
    "keyword": "Feature",
    "uri": "features/api/user-api.feature",
    "tags": []
  },
  {
    "line": 22,
    "elements": [
      {
        "line": 24,
        "name": "Authentication token is required for protected endpoints",
        "description": "",
        "id": "api-authentication;authentication-token-is-required-for-protected-endpoints",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 580000000,
              "status": "passed"
            },
            "line": 25,
            "name": "the API is available",
            "match": {
              "location": "ApiSteps.apiIsAvailable()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1100000000,
              "status": "passed"
            },
            "line": 26,
            "name": "I send a GET request to /api/protected without authentication",
            "match": {
              "location": "ApiSteps.sendGetRequestWithoutAuth(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 340000000,
              "status": "passed"
            },
            "line": 27,
            "name": "the response status should be 401",
            "match": {
              "location": "ApiSteps.verifyResponseStatus(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 23,
            "name": "@api"
          },
          {
            "line": 23,
            "name": "@security"
          }
        ]
      },
      {
        "line": 29,
        "name": "Valid token allows access to protected endpoints",
        "description": "",
        "id": "api-authentication;valid-token-allows-access-to-protected-endpoints",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 620000000,
              "status": "passed"
            },
            "line": 30,
            "name": "I have a valid authentication token",
            "match": {
              "location": "ApiSteps.haveValidToken()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1350000000,
              "status": "passed"
            },
            "line": 31,
            "name": "I send a GET request to /api/protected with authentication",
            "match": {
              "location": "ApiSteps.sendGetRequestWithAuth(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 290000000,
              "status": "passed"
            },
            "line": 32,
            "name": "the response status should be 200",
            "match": {
              "location": "ApiSteps.verifyResponseStatus(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 450000000,
              "status": "passed"
            },
            "line": 33,
            "name": "the response should contain protected data",
            "match": {
              "location": "ApiSteps.verifyProtectedData()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 28,
            "name": "@api"
          },
          {
            "line": 28,
            "name": "@security"
          },
          {
            "line": 28,
            "name": "@critical"
          }
        ]
      },
      {
        "line": 35,
        "name": "Expired token is rejected",
        "description": "",
        "id": "api-authentication;expired-token-is-rejected",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 480000000,
              "status": "passed"
            },
            "line": 36,
            "name": "I have an expired authentication token",
            "match": {
              "location": "ApiSteps.haveExpiredToken()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1250000000,
              "status": "failed",
              "error_message": "Expected status 401 but got 500. Server error: Token validation service unavailable"
            },
            "line": 37,
            "name": "I send a GET request to /api/protected with expired token",
            "match": {
              "location": "ApiSteps.sendGetRequestWithExpiredToken(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 0,
              "status": "skipped"
            },
            "line": 38,
            "name": "the response status should be 401",
            "match": {
              "location": "ApiSteps.verifyResponseStatus(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 34,
            "name": "@api"
          },
          {
            "line": 34,
            "name": "@security"
          },
          {
            "line": 34,
            "name": "@negative"
          }
        ]
      }
    ],
    "name": "API Authentication",
    "description": "Testing API authentication and authorization mechanisms",
    "id": "api-authentication",
    "keyword": "Feature",
    "uri": "features/api/authentication.feature",
    "tags": []
  }
]