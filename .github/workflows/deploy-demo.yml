name: Deploy Demo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: cucumber-report-viewer/package-lock.json
        
    - name: Install dependencies
      run: |
        cd cucumber-report-viewer
        npm ci
        
    - name: Run tests
      run: |
        cd cucumber-report-viewer
        npm run test -- --watchAll=false --coverage=false
        
    - name: Run linting
      run: |
        cd cucumber-report-viewer
        npm run lint
        
    - name: Build application
      run: |
        cd cucumber-report-viewer
        npm run build
        
    - name: Validate build
      run: |
        cd cucumber-report-viewer
        npm run validate-build
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: cucumber-report-viewer/dist

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Verify deployment
      run: |
        echo "Demo deployed successfully!"
        echo "URL: ${{ steps.deployment.outputs.page_url }}"
        
  notify:
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build, deploy]
    
    steps:
    - name: Deployment status
      run: |
        if [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "‚úÖ Demo deployment successful!"
          echo "üöÄ Live demo: https://srisri-t.github.io/GCAutomationTestResults/"
        else
          echo "‚ùå Demo deployment failed"
          echo "Build status: ${{ needs.build.result }}"
          echo "Deploy status: ${{ needs.deploy.result }}"
        fi